# Form implementation generated from reading ui file 'md5_hasher_gui.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MD5HasherApp(object):
    def setupUi(self, MD5HasherApp):
        MD5HasherApp.setObjectName("MD5HasherApp")
        MD5HasherApp.resize(800, 600)
        self.layout = QtWidgets.QVBoxLayout(MD5HasherApp)
        self.layout.setContentsMargins(20, 20, 20, 20)
        self.layout.setSpacing(15)
        self.layout.setObjectName("layout")
        self.tabs = QtWidgets.QTabWidget(parent=MD5HasherApp)
        self.tabs.setDocumentMode(False)
        self.tabs.setObjectName("tabs")
        self.tab1 = QtWidgets.QWidget()
        self.tab1.setObjectName("tab1")
        self.tab1_layout = QtWidgets.QVBoxLayout(self.tab1)
        self.tab1_layout.setContentsMargins(20, 20, 20, 20)
        self.tab1_layout.setSpacing(15)
        self.tab1_layout.setObjectName("tab1_layout")
        self.input_label = QtWidgets.QLabel(parent=self.tab1)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.input_label.setFont(font)
        self.input_label.setObjectName("input_label")
        self.tab1_layout.addWidget(self.input_label)
        self.input_field = QtWidgets.QLineEdit(parent=self.tab1)
        self.input_field.setObjectName("input_field")
        self.tab1_layout.addWidget(self.input_field)
        self.hash_label = QtWidgets.QLabel(parent=self.tab1)
        self.hash_label.setObjectName("hash_label")
        self.tab1_layout.addWidget(self.hash_label)
        self.hash_output = QtWidgets.QLineEdit(parent=self.tab1)
        self.hash_output.setReadOnly(True)
        self.hash_output.setObjectName("hash_output")
        self.tab1_layout.addWidget(self.hash_output)
        self.reference_hash_label = QtWidgets.QLabel(parent=self.tab1)
        self.reference_hash_label.setObjectName("reference_hash_label")
        self.tab1_layout.addWidget(self.reference_hash_label)
        self.reference_hash_input = QtWidgets.QLineEdit(parent=self.tab1)
        self.reference_hash_input.setObjectName("reference_hash_input")
        self.tab1_layout.addWidget(self.reference_hash_input)
        self.check_button = QtWidgets.QPushButton(parent=self.tab1)
        self.check_button.setObjectName("check_button")
        self.tab1_layout.addWidget(self.check_button)
        self.result_label = QtWidgets.QLabel(parent=self.tab1)
        self.result_label.setObjectName("result_label")
        self.tab1_layout.addWidget(self.result_label)
        self.result_output = QtWidgets.QLabel(parent=self.tab1)
        self.result_output.setText("")
        self.result_output.setObjectName("result_output")
        self.tab1_layout.addWidget(self.result_output)
        self.tabs.addTab(self.tab1, "")
        self.tab2 = QtWidgets.QWidget()
        self.tab2.setObjectName("tab2")
        self.tab2_layout = QtWidgets.QVBoxLayout(self.tab2)
        self.tab2_layout.setContentsMargins(20, 20, 20, 20)
        self.tab2_layout.setSpacing(15)
        self.tab2_layout.setObjectName("tab2_layout")
        self.file_button = QtWidgets.QPushButton(parent=self.tab2)
        self.file_button.setObjectName("file_button")
        self.tab2_layout.addWidget(self.file_button)
        self.hash_output_file = QtWidgets.QLineEdit(parent=self.tab2)
        self.hash_output_file.setReadOnly(True)
        self.hash_output_file.setObjectName("hash_output_file")
        self.tab2_layout.addWidget(self.hash_output_file)
        self.reference_hash_input_file = QtWidgets.QLineEdit(parent=self.tab2)
        self.reference_hash_input_file.setObjectName("reference_hash_input_file")
        self.tab2_layout.addWidget(self.reference_hash_input_file)
        self.check_button_file = QtWidgets.QPushButton(parent=self.tab2)
        self.check_button_file.setObjectName("check_button_file")
        self.tab2_layout.addWidget(self.check_button_file)
        self.result_output_file = QtWidgets.QLabel(parent=self.tab2)
        self.result_output_file.setText("")
        self.result_output_file.setObjectName("result_output_file")
        self.tab2_layout.addWidget(self.result_output_file)
        self.tabs.addTab(self.tab2, "")
        self.tab3 = QtWidgets.QWidget()
        self.tab3.setObjectName("tab3")
        self.tab3_layout = QtWidgets.QVBoxLayout(self.tab3)
        self.tab3_layout.setContentsMargins(20, 20, 20, 20)
        self.tab3_layout.setSpacing(15)
        self.tab3_layout.setObjectName("tab3_layout")
        self.folder_button = QtWidgets.QPushButton(parent=self.tab3)
        self.folder_button.setObjectName("folder_button")
        self.tab3_layout.addWidget(self.folder_button)
        self.files_list = QtWidgets.QListWidget(parent=self.tab3)
        self.files_list.setObjectName("files_list")
        self.tab3_layout.addWidget(self.files_list)
        self.select_ref_button = QtWidgets.QPushButton(parent=self.tab3)
        self.select_ref_button.setObjectName("select_ref_button")
        self.tab3_layout.addWidget(self.select_ref_button)
        self.select_curr_button = QtWidgets.QPushButton(parent=self.tab3)
        self.select_curr_button.setObjectName("select_curr_button")
        self.tab3_layout.addWidget(self.select_curr_button)
        self.compare_button = QtWidgets.QPushButton(parent=self.tab3)
        self.compare_button.setObjectName("compare_button")
        self.tab3_layout.addWidget(self.compare_button)
        self.compare_results = QtWidgets.QListWidget(parent=self.tab3)
        self.compare_results.setObjectName("compare_results")
        self.tab3_layout.addWidget(self.compare_results)
        self.tabs.addTab(self.tab3, "")
        self.tab4 = QtWidgets.QWidget()
        self.tab4.setObjectName("tab4")
        self.tab4_layout = QtWidgets.QVBoxLayout(self.tab4)
        self.tab4_layout.setContentsMargins(20, 20, 20, 20)
        self.tab4_layout.setSpacing(15)
        self.tab4_layout.setObjectName("tab4_layout")
        self.folder_hash_button = QtWidgets.QPushButton(parent=self.tab4)
        self.folder_hash_button.setObjectName("folder_hash_button")
        self.tab4_layout.addWidget(self.folder_hash_button)
        self.folder_hash_output = QtWidgets.QLineEdit(parent=self.tab4)
        self.folder_hash_output.setReadOnly(True)
        self.folder_hash_output.setObjectName("folder_hash_output")
        self.tab4_layout.addWidget(self.folder_hash_output)
        self.folder_reference_hash_input = QtWidgets.QLineEdit(parent=self.tab4)
        self.folder_reference_hash_input.setObjectName("folder_reference_hash_input")
        self.tab4_layout.addWidget(self.folder_reference_hash_input)
        self.folder_check_button = QtWidgets.QPushButton(parent=self.tab4)
        self.folder_check_button.setObjectName("folder_check_button")
        self.tab4_layout.addWidget(self.folder_check_button)
        self.folder_result_output = QtWidgets.QLabel(parent=self.tab4)
        self.folder_result_output.setText("")
        self.folder_result_output.setObjectName("folder_result_output")
        self.tab4_layout.addWidget(self.folder_result_output)
        self.tabs.addTab(self.tab4, "")

        # Modify Tab 5 layout
        self.tab5 = QtWidgets.QWidget()
        self.tab5.setObjectName("tab5")
        self.tab5_layout = QtWidgets.QVBoxLayout(self.tab5)
        self.tab5_layout.setContentsMargins(20, 20, 20, 20)
        self.tab5_layout.setSpacing(15)
        self.tab5_layout.setObjectName("tab5_layout")

        self.viz_input_label = QtWidgets.QLabel(parent=self.tab5)
        self.viz_input_label.setObjectName("viz_input_label")
        self.tab5_layout.addWidget(self.viz_input_label)

        self.viz_input = QtWidgets.QLineEdit(parent=self.tab5)
        self.viz_input.setObjectName("viz_input")
        self.tab5_layout.addWidget(self.viz_input)

        # Add horizontal layout for buttons
        self.viz_buttons_layout = QtWidgets.QHBoxLayout()
        
        self.viz_start_button = QtWidgets.QPushButton(parent=self.tab5)
        self.viz_start_button.setObjectName("viz_start_button")
        self.viz_buttons_layout.addWidget(self.viz_start_button)

        self.viz_next_button = QtWidgets.QPushButton(parent=self.tab5)
        self.viz_next_button.setObjectName("viz_next_button")
        self.viz_next_button.setEnabled(False)
        self.viz_buttons_layout.addWidget(self.viz_next_button)

        self.tab5_layout.addLayout(self.viz_buttons_layout)

        self.viz_output = QtWidgets.QTextEdit(parent=self.tab5)
        self.viz_output.setReadOnly(True)
        self.viz_output.setObjectName("viz_output")
        self.tab5_layout.addWidget(self.viz_output)

        self.tabs.addTab(self.tab5, "")

        self.layout.addWidget(self.tabs)

        self.retranslateUi(MD5HasherApp)
        self.tabs.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MD5HasherApp)

    def retranslateUi(self, MD5HasherApp):
        _translate = QtCore.QCoreApplication.translate
        MD5HasherApp.setWindowTitle(_translate("MD5HasherApp", "MD5 Хеширование"))
        self.input_label.setText(_translate("MD5HasherApp", "Введите строку:"))
        self.hash_label.setText(_translate("MD5HasherApp", "MD5 Хеш:"))
        self.reference_hash_label.setText(_translate("MD5HasherApp", "Эталонный хеш:"))
        self.check_button.setText(_translate("MD5HasherApp", "Проверить хеш"))
        self.result_label.setText(_translate("MD5HasherApp", "Результат проверки:"))
        self.tabs.setTabText(self.tabs.indexOf(self.tab1), _translate("MD5HasherApp", "Хеширование строки"))
        self.file_button.setText(_translate("MD5HasherApp", "Выбрать файл"))
        self.check_button_file.setText(_translate("MD5HasherApp", "Проверить хеш"))
        self.tabs.setTabText(self.tabs.indexOf(self.tab2), _translate("MD5HasherApp", "Хеширование файла"))
        self.folder_button.setText(_translate("MD5HasherApp", "Выбрать папку"))
        self.select_ref_button.setText(_translate("MD5HasherApp", "Выбрать эталонный файл"))
        self.select_curr_button.setText(_translate("MD5HasherApp", "Выбрать текущий файл"))
        self.compare_button.setText(_translate("MD5HasherApp", "Сравнить файлы"))
        self.tabs.setTabText(self.tabs.indexOf(self.tab3), _translate("MD5HasherApp", "Хеширование и сравнение"))
        self.folder_hash_button.setText(_translate("MD5HasherApp", "Выбрать папку"))
        self.folder_check_button.setText(_translate("MD5HasherApp", "Проверить хеш"))
        self.tabs.setTabText(self.tabs.indexOf(self.tab4), _translate("MD5HasherApp", "Хеш папки"))
        self.viz_input_label.setText(_translate("MD5HasherApp", "Введите строку для визуализации:"))
        self.viz_start_button.setText(_translate("MD5HasherApp", "Начать"))
        self.viz_next_button.setText(_translate("MD5HasherApp", "Следующий шаг"))
        self.tabs.setTabText(self.tabs.indexOf(self.tab5), _translate("MD5HasherApp", "Визуализация MD5"))
